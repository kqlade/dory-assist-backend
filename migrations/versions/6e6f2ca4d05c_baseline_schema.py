"""baseline schema

Revision ID: 6e6f2ca4d05c
Revises: 
Create Date: 2025-04-25 14:10:32.745194

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e6f2ca4d05c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('pending_clarifications')  # table never existed; safe to skip
    op.add_column('message_envelopes', sa.Column('raw_refs', sa.JSON(), nullable=True))
    op.alter_column('message_envelopes', 'envelope_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('message_envelopes', 'user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'channel',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'instruction',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('message_envelopes', 'payload',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.add_column('reminders', sa.Column('payload', sa.JSON(), nullable=True))
    op.alter_column('reminders', 'reminder_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('reminders', 'user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('reminders', 'reminder_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('reminders', 'timezone',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('reminders', 'channel',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("'sms'::text"))
    op.alter_column('reminders', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('reminders', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('reminders', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('reminders_due_idx', table_name='reminders')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('reminders_due_idx', 'reminders', ['status', 'reminder_time'], unique=False)
    op.alter_column('reminders', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('reminders', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('reminders', 'status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::text"))
    op.alter_column('reminders', 'channel',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'sms'::text"))
    op.alter_column('reminders', 'timezone',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('reminders', 'reminder_time',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('reminders', 'user_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('reminders', 'reminder_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('reminders', 'payload')
    op.alter_column('message_envelopes', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'payload',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'instruction',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('message_envelopes', 'channel',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'user_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('message_envelopes', 'envelope_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('message_envelopes', 'raw_refs')
    op.create_table('pending_clarifications',
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('envelope', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('asked_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='pending_clarifications_pkey')
    )
    # ### end Alembic commands ###
